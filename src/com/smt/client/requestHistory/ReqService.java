package com.smt.client.requestHistory;


import com.google.gwt.user.client.rpc.RemoteService;
import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;
/*
 * @RemoteServiceRelativePath() is an annotation.
 * here we are providing the path to this interface to server side 
 * servlet
 * "request" will be included as a url pattern for the servlet in the web.xml file.
 * 
 * */
@RemoteServiceRelativePath("request")
/*
 * Here we are taking the  ReqService interface
 * this interface extends another interface  RemoteService
 * when we extends an interface to as a RemoteService then it works as the
 * Synchronous interface in the GWT
 * we define all the method which are required in this interface
 * These methods are implemented on the server side in the GWT
 * because the GWt is divided into three part
 *  1.client....>
 *              we can put only the GUI related code in the client 
 *              we can't put database or any other operation
 *              on the client side
 *  2.Server.....>
 *  we put database related or business related logic on the 
 *  Server side
 *  we can't put the GUI related logic on the server side
 *  we implement all the method of the Synchronous interface on the server side
 *  3.Shared.....> in the shared we put the logic that are shared by both by the client and server
 *So directly we can't access the server side data on the client 
 *side 
 *we have to make Remote Procedure Call(RPC)
 *the client is the Synchronous and server side data is the synchronous
 *in this case the browser will hang
 *So to make the Browser Asynchronous we have to make RPC connection.
 *We take to interface Synchronous another one is asynchronous
 *Asynchronous interface is automatically generated by the 
 *GWT  */ 
public interface ReqService extends RemoteService {
	ReqDAO insertReq( String empId, String productName, String productConfig,String managerId);
	ReqDAO ReqViewAdmin();
	ReqDAO ReqViewEmployee(String empId);
	ReqDAO ReqViewManager(String maanagerId);
	void managerAproval(String reqId, String status, String managerCmnt);
	void adminAproval(String reqId);
	void adminPending(String reqId);
	ReqDAO sortStatus(String statusName, String managerId);
	ReqDAO sortStatusAdmin(String statusName);
}
